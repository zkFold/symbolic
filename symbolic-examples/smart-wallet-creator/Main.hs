{-# LANGUAGE DefaultSignatures    #-}
{-# LANGUAGE DeriveAnyClass       #-}
{-# LANGUAGE DerivingStrategies   #-}
{-# LANGUAGE OverloadedStrings    #-}
{-# LANGUAGE PolyKinds            #-}
{-# LANGUAGE TemplateHaskell      #-}
{-# LANGUAGE TypeFamilies         #-}
{-# LANGUAGE TypeOperators        #-}
{-# LANGUAGE UndecidableInstances #-}

module Main where

import           Data.ByteString                       (ByteString)
import           Prelude                               hiding (Fractional (..), Num (..), length)

import           ZkFold.Algebra.Class                  (zero)
import           ZkFold.Protocol.Plonkup.Prover.Secret
import           ZkFold.Symbolic.Examples.SmartWallet

main :: IO ()
main = do
    let setupBytes = mkSetup $ expModSetupMock @ByteString zero
        rawProof   = expModProofMock @ByteString zero (PlonkupProverSecret $ pure zero)
            (ExpModProofInput 65537 23673913231282541353242445564026273690701173759133133571571622136811050263849828391867070149476010776580637901662538160801663305277123187687236717267615169702941008899631874298678699792342841313667764089963096592025459034821722013424225926560980239602375588148238453279063986426439851100140062506574072069782824460563914193433757797794493424257489159679997399470750027634273105502212420479414258479392228990405477591260025408004007566863724408205563254174405669731238346563068937093378247298089680649161522379835431584861000993050317794629253984945847536580571494216419224065157406907026754561745241879990640135658447 8405194462646379903005312731437006338301443316383934173096470532499309505079050621942807940431004740904452492455729262761375839929343687798837155962241414523760786701068571364994172425830543007382857081309609588344805190630185571255376588779986487415505743457773435695185220937225722005776914920889590748600022006208788210069359854111792282721152789500029151095693544853752760985909739526269368829872319497516532757835689245195301536557038421907116461611513623284235207979706501332224799270028182804128939326277905551328635241408460992680724249072408508931517372897020225622442060759446351095415999830055134452992522 22603877122608002087049410733661182980896513693719444501264409481655 
 
            )
        proofBytes = mkProof rawProof  
    print setupBytes
    print rawProof
    print proofBytes
